# Events block configures the connection processing method
events {
    # Maximum number of simultaneous connections that can be opened by a worker process
    worker_connections 1024;
}

# HTTP context for defining web server behavior
http {

    # Configure DNS resolver for upstream server name resolution
    # Uses Google's public DNS with 1200 second cache validity
    resolver 8.8.8.8 valid=1200s;

    # Main server block - handles all incoming requests on port 80
    server {
        # Listen on port 80 (HTTP)
        listen 80;
        # Server name for this virtual host
        server_name localhost;

        # Enable debug logging for troubleshooting
        error_log /var/log/nginx/error.log debug;
        # Log all access attempts
        access_log /var/log/nginx/access.log;

        # Location block for redirecting to Google
        # Example of proxying requests to an external site
        location /redirect-to-google {
            # Alternative: Use 301 redirect instead of proxy
            # return 301 https://www.google.com;
            # Proxy pass to Google (acts as a reverse proxy)
            proxy_pass https://www.google.com;
        }

        # Location block for proxying Optimizely CDN datafiles
        # This acts as a CORS-enabled proxy for accessing external CDN resources
        location /datafiles/ {
            # Don't forward the original request body to upstream
            proxy_pass_request_body off;
            # Reset content length since we're not forwarding the body
            proxy_set_header Content-Length "";

            # Proxy requests to Optimizely's CDN
            proxy_pass https://cdn.optimizely.com/datafiles/;

            # Add CORS headers to allow cross-origin requests
            # Allow GET and OPTIONS methods
            add_header 'Access-Control-Allow-Methods' 'GET,OPTIONS' always;
            # Allow common headers used in CORS requests
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            # Expose headers that clients can access
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

            # Set the Host header to match the upstream server
            proxy_set_header Host cdn.optimizely.com;
        }

        # Document root directory for serving static files
        # This is where nginx looks for files to serve directly
        root /usr/share/nginx/html; 

        # Default files to serve when no specific file is requested
        # nginx will try these files in order
        index index.html index.htm;
    }
}